name: Release
on:
  push:
    tags:
      - "*"

jobs:
  create_release:
    name: Create a new Github release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          branch: main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release_app:
    name: Release GUI app
    runs-on: macos-11
    needs: [create_release]
    steps:
      - uses: actions/checkout@v4
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: aarch64-apple-darwin
      - uses: Swatinem/rust-cache@v1
        with:
          working-directory: core/
      - uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.0"
          bundler-cache: true
          working-directory: app
      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable
      - uses: webfactory/ssh-agent@v0.9.1
        with:
          ssh-private-key: ${{ secrets.MATCH_DEPLOY_KEY }}
      - run: bundler exec fastlane ci_release
        env:
          MATCH_READONLY: true
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD: ${{ secrets.FASTLANE_APPLE_APPLICATION_SPECIFIC_PASSWORD }}
        working-directory: app
      - name: Upload assets
        run: |
          gh release upload "${{ github.ref_name }}" app/Specht2.app.zip --clobber
          gh release upload "${{ github.ref_name }}" app/Specht2.app.dSYM.zip --clobber
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: update version information for sparkle
        run: app/bin/publish_appcast.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SPARKLE_KEY: ${{ secrets.SPARKLE_KEY }}

  release_docker:
    name: Release Docker image
    runs-on: ubuntu-latest
    needs: [create_release]
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          push: true
          # We don't build docker image for other archs because it's toooooo slow.
          # You can build it yourself or use snap to install it.
          platforms: "linux/amd64"
          tags: ghcr.io/zhuhaow/specht2:${{ github.ref_name }}
          cache-from: type=registry,ref=ghcr.io/zhuhaow/specht2:buildcache
          cache-to: type=registry,ref=ghcr.io/zhuhaow/specht2:buildcache,mode=max

  release_bin:
    name: Release CLI binary
    needs: [create_release]
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
          - target: aarch64-unknown-linux-gnu
          - target: x86_64-apple-darwin
            os: macos-11
          - target: aarch64-apple-darwin
            os: macos-11
          - target: x86_64-pc-windows-msvc
            os: windows-latest
    runs-on: ${{ matrix.os || 'ubuntu-latest' }}
    steps:
      - uses: actions/checkout@v4
      - run: |
          cp -r core ..
          rm -rf ./*
          cp -r ../core/* .
        shell: bash
      - if: ${{ matrix.target != 'aarch64-apple-darwin' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - if: ${{ matrix.target == 'aarch64-apple-darwin' }}
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          target: aarch64-apple-darwin
      - uses: Swatinem/rust-cache@v1
      - if: ${{ matrix.target == 'aarch64-unknown-linux-gnu' }}
        run: |
          docker build -t arm64_with_openssl -f cross/Dockerfile-arm64 .
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: specht2
          tar: unix
          zip: windows
          target: ${{ matrix.target }}
          archive: $bin-$target
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_PROFILE_RELEASE_LTO: true
